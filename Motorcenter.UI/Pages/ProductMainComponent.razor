@using Motorcenter.UI.Storage.Services
@inject IStorageService Storage 

<section class="d-flex flex-wrap">
    @foreach(var vehicle in Service!.Vehicles)
    {
        <div class="card mb-3" style="max-width: 540px;">
            <div class="row">
                <div class="col-md-4">
                    <img src="@vehicle.PictureURL" class="img-fluid rounded-start" alt="...">
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">@vehicle.Name</h5>
                        <p class="card-text">@vehicle.Description.Truncate(300)</p>
                    </div>
                </div>
            </div>
            <div class="d-flex card-footer bg-white g-0 justify-content-start">
                @if (vehicle.Years!.Count > 0)
                {
                    <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
                        @foreach (var year in vehicle.Years)
                        {
                            <input type="radio" class="btn-check" name="btnradio"
                                id="year-@vehicle.Id-@year.Id"
                                @onclick="() => OnYearClick(vehicle, year)"
                                autocomplete="off" checked>
                            <label class="btn btn-outline-primary btn-radio"
                                for="year-@vehicle.Id-@year.Id">@year.Name</label>

                        }
                    </div>
                }

                @if (vehicle.Colors!.Count > 0)
                {
                    foreach (var color in vehicle.Colors)
                    {
                        <div class="btn-group mx-2" role="group" aria-label="Basic radio toggle button group">
                            <input type="radio" class="btn-check" name="color-@vehicle.Id-@color.Id" id="color-@vehicle.Id-@color.Id"
                                   autocomplete="off" @onclick="() => OnColorClick(vehicle, color)">
                            <label class="btn btn-sm btn-outline-primary"
                                   style="background-color:#@color.BGColor; color:#@(color.IsSelected ? color.TextColor : color.BGColor)"
                                   for="color-@vehicle.Id-@color.Id"><i class="bi-check"></i></label>
                        </div>
                    }
                    
                }
                <button class="btn btn-sm btn-success" @onclick="() => AddToCart(vehicle)"><i class="bi-cart"></i></button>

            </div>
            
        </div>
    }
</section>

@code {
    [CascadingParameter(Name = "Service")] public UIService? Service { get; set; }
    [Parameter] public EventCallback OnChange { get; set; }

    void OnColorClick(VehicleGetDTO vehicle, ColorGetDTO color)
    {
        vehicle.Colors!.ForEach(c => c.IsSelected = false);
        color.IsSelected = true;
    }

    void OnYearClick(VehicleGetDTO vehicle, YearGetDTO year)
    {
        vehicle.Years!.ForEach(p => p.IsSelected = false);
        year.IsSelected = true;
    }

    async Task AddToCart(VehicleGetDTO vehicle)
    {
        // await Storage.SetAsync("MyKey", vehicle);
        var prod = await Storage.GetAsync<VehicleGetDTO>("MyKey");
         // await Storage.RemoveAsync("MyKey");
        //var vehicle =  Service!.Vehicles.Single(p => p.Id == id);
    }
}
