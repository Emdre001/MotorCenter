<nav class="navbar d-flex justify-content-between mx-3">
    <style>
        .initial-nav {
            position: relative;
        }
    </style>
    <a class="navbar-brand" href="#"><img src="images/MotorCenterLogoSmall.png" alt="MotorCenter logo" /> </a>     @* Loggan *@
     
    <div class="d-flex justify-content-between">
        @* Separerar mellan dropdown och cart *@
        <div class="dropdown">
            <button class=" rounded-0 btn btn-black dropdown-light" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-lock"></i>Account @* Lägger till en icon med lås och Det står Account *@
            </button>
            <ul class="dropdown-menu dropdown-menu-dark">
                @* Dropdown menyn *@
                <li><a class="dropdown-item" href="#">Action</a></li>
                <li><a class="dropdown-item" href="#">Another action</a></li>
                <li><a class="dropdown-item" href="#">Something else here</a></li>
            </ul>
        </div>
        <div>
            <div class="position-relative">
                <button id="cart-button" type="button"
                    data-bs-toggle="modal" data-bs-target="#cart"
                    class="btn btn-light rounded-0">    
                <i class="bi bi-cart"></i></button>@* Här har vi gjort en fyrkantig knapp  *@
                <div class="cart-count bg-black text-white rounded-circle position-absolute">@UICartService!.CartItems.Count</div> @* cart-count gör en egen klass för röda cirkeln över cart. *@
            </div>
            <div> </div>
        </div>
    </div>
</nav>

<CartComponent OnRemoveCartItem="OnRemoveCartItem" CartItems="UICartService!.CartItems" />

@code {
    [Parameter] public UIService? UICartService { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        UICartService!.CartItems =await UICartService!.ReadStorage<List<CartItemDTO>>("CartItems") ?? [];
    }

   async Task OnRemoveCartItem(CartItemDTO? cartItem)
    {
        UICartService!.CartItems.Remove(cartItem);
        await UICartService!.SaveToStorage("CartItems", UICartService!.CartItems);
    }
}
